h1. ActsAsDebated

Based off of acts_as_rateable, this simplified rating system provides a +1 / -1 debate system on your model. The debated score is calculated by the sum of response scores.

Full rSpec suite is provided but you'll need to replace @model with an instance of one of your own models utilizing the mixin.

h2. Example

h3. Run the debateable_migration:

    $ script/generate debateable_migration
    $ rake db:migrate

h3. Declare the mixin within a model of your choice:

    class Topic < ActiveRecord::Base
       acts_as_debated
    end

h3. Utilize the instance methods as you wish.

  >> Topic.create!(:name => 'test').debated_by?(user)       
  => false
    
  >> Topic.first.thumbs_up_from(user)                       
  => <#Debateable id: ...
    
  >> Topic.first.debated_score                              
  => 1
    
  >> Topic.first.thumbs_down_from(user)                     
  => <#Debateable id: ...
    
  >> Topic.first.debated_score                              
  => -1
    
  >> Topic.first.thumbs_down_from(another_user)             
  => <#Debateable id: ...
    
  >> Topic.first.debated_score                              
  => -2
    
  >> Topic.first.debated_by?(user)                          
  => true

h3. Get results by debate score.

You can easily retrieve your objects sorted by debate score by using the class method 'order_by_score' which supports :order, :limit, :offset.

    >> MyTopic.order_by_score                                   
    => Finds all score value desc...
    
    >> MyTopic.order_by_score(:limit => 2)                      
    => Finds the two top rated items

Finally you can extend an association on a parent object to get ranked results as well. For example if Topic belongs to Forum we can do this:

    class Forum < ActiveRecord::Base
       has_many :topics, :extend => ActiveRecord::Acts::Debated::OrderByScore
    end

    >> Forum.first.topics.order_by_score                                 
    => Scoped by owner id.
    
    >> Forum.first.topics.order_by_score(:limit => 5, :order => :asc)    
    => Find the 5 lowest.

Copyright (c) 2009 Jim Jeffers, released under the MIT license
